{"language":"javascript","client_name":"inchjs","args":[],"client_version":"0.4.1","git_repo_url":"git@github.com:tomdionysus/tenkai.git","branch_name":"master","objects":[{"comment":"/**\n* Asset is the base class for graphical assets.\n* Assets are used with {@link Scene}, {@link Entity} etc.\n* They are loaded as a HTML element 'img' tag.\n*/","meta":{"range":[165,1021],"filename":"Asset.js","lineno":6,"columnno":0,"path":"/lib","code":{"id":"astnode100000002","name":"Asset","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"Asset is the base class for graphical assets.\nAssets are used with {@link Scene}, {@link Entity} etc. \nThey are loaded as a HTML element 'img' tag.","name":"Asset","longname":"Asset","kind":"class","scope":"global","undocumented":true},{"comment":"/**\n* Create a new Asset with the specified options\n* @param {object} options The options object for the Asset - see below\n* @example\nconst { Asset } = require('tenkai')\n\nvar asset = new Asset({\nname: 'tilesAsset',\nsrc: 'assets/tileset.png'\n})\n*/","meta":{"range":[436,516],"filename":"Asset.js","lineno":18,"columnno":1,"path":"/lib","code":{"id":"astnode100000005","name":"Asset","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Create a new Asset with the specified options","params":[{"type":{"names":["object"]},"description":"The options object for the Asset - see below","name":"options"}],"examples":["const { Asset } = require('tenkai')\n\nvar asset = new Asset({\n  name: 'tilesAsset',\n  src: 'assets/tileset.png'\n})"],"name":"Asset","longname":"Asset","kind":"class","scope":"global","undocumented":true},{"comment":"/**\n* Create a new Asset with the specified options\n* @param {object} options The options object for the Asset - see below\n* @example\nconst { Asset } = require('tenkai')\n\nvar asset = new Asset({\nname: 'tilesAsset',\nsrc: 'assets/tileset.png'\n})\n*/","meta":{"range":[436,516],"filename":"Asset.js","lineno":18,"columnno":1,"path":"/lib","code":{"id":"astnode100000005","name":"Asset","type":"MethodDefinition","paramnames":["options"]}},"name":"Asset","longname":"Asset","kind":"class","description":"Create a new Asset with the specified options","examples":["const { Asset } = require('tenkai')\n\nvar asset = new Asset({\n  name: 'tilesAsset',\n  src: 'assets/tileset.png'\n})"],"scope":"global","classdesc":"Asset is the base class for graphical assets.\nAssets are used with {@link Scene}, {@link Entity} etc. \nThey are loaded as a HTML element 'img' tag.","params":[{"type":{"names":["object"]},"description":"The options object for the Asset - see below","name":"options"}]},{"comment":"/**\n* Load the Asset asynchronously from its src and optionally trigger the supplied callback when available.\n* @param {function} callback The callback function to invoke when the asset has been loaded\n* @example\nasset.load((err, as) => {\nconsole.log(\"Asset \"+as.name+\" Loaded\")\n})\n*/","meta":{"range":[813,1019],"filename":"Asset.js","lineno":31,"columnno":1,"path":"/lib","code":{"id":"astnode100000028","name":"Asset#load","type":"MethodDefinition","paramnames":["callback"]},"vars":{"":null}},"description":"Load the Asset asynchronously from its src and optionally trigger the supplied callback when available.","params":[{"type":{"names":["function"]},"description":"The callback function to invoke when the asset has been loaded","name":"callback","defaultvalue":null}],"examples":["asset.load((err, as) => {\n  console.log(\"Asset \"+as.name+\" Loaded\")\n}) "],"name":"load","longname":"Asset#load","kind":"function","memberof":"Asset","scope":"instance"},{"comment":"","meta":{"range":[899,986],"filename":"Asset.js","lineno":33,"columnno":15,"path":"/lib","code":{"id":"astnode100000048","name":"this.element.onload","type":"ArrowFunctionExpression","paramnames":["err"]}},"undocumented":true,"name":"onload","longname":"Asset#element.onload","kind":"function","memberof":"Asset#element","scope":"static"},{"comment":"/**\n*  Audio is the base class for game audio, loaded into a HTML5 'audio' tag.\n*/","meta":{"range":[85,4098],"filename":"Audio.js","lineno":4,"columnno":0,"path":"/lib","code":{"id":"astnode100000085","name":"Audio","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"Audio is the base class for game audio, loaded into a HTML5 'audio' tag.","name":"Audio","longname":"Audio","kind":"class","scope":"global","undocumented":true},{"comment":"/**\n* Create a new Audio with the specified options.\n* @param {object} options The options object for the Asset - see below\n* @example\nconst { Asset } = require('tenkai')\n\nvar asset = new Asset({\nsrc: 'music/maintitle.mp3',   // Source file\ntype: 'audio/mpeg',           // MIME type of the asset file\nstartTime: 0,                 // Start offset in ms (optional)\nendTime: 1040,                // End offset in ms (optional)\nloop: true                    // Loop the audio continuously (optional, default false)\n})\n*/","meta":{"range":[634,845],"filename":"Audio.js","lineno":19,"columnno":1,"path":"/lib","code":{"id":"astnode100000088","name":"Audio","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Create a new Audio with the specified options.","params":[{"type":{"names":["object"]},"description":"The options object for the Asset - see below","name":"options"}],"examples":["const { Asset } = require('tenkai')\n\nvar asset = new Asset({\n  src: 'music/maintitle.mp3',   // Source file\n  type: 'audio/mpeg',           // MIME type of the asset file\n  startTime: 0,                 // Start offset in ms (optional)\n  endTime: 1040,                // End offset in ms (optional)\n  loop: true                    // Loop the audio continuously (optional, default false)\n})"],"name":"Audio","longname":"Audio","kind":"class","scope":"global","undocumented":true},{"comment":"/**\n* Create a new Audio with the specified options.\n* @param {object} options The options object for the Asset - see below\n* @example\nconst { Asset } = require('tenkai')\n\nvar asset = new Asset({\nsrc: 'music/maintitle.mp3',   // Source file\ntype: 'audio/mpeg',           // MIME type of the asset file\nstartTime: 0,                 // Start offset in ms (optional)\nendTime: 1040,                // End offset in ms (optional)\nloop: true                    // Loop the audio continuously (optional, default false)\n})\n*/","meta":{"range":[634,845],"filename":"Audio.js","lineno":19,"columnno":1,"path":"/lib","code":{"id":"astnode100000088","name":"Audio","type":"MethodDefinition","paramnames":["options"]}},"name":"Audio","longname":"Audio","kind":"class","description":"Create a new Audio with the specified options.","examples":["const { Asset } = require('tenkai')\n\nvar asset = new Asset({\n  src: 'music/maintitle.mp3',   // Source file\n  type: 'audio/mpeg',           // MIME type of the asset file\n  startTime: 0,                 // Start offset in ms (optional)\n  endTime: 1040,                // End offset in ms (optional)\n  loop: true                    // Loop the audio continuously (optional, default false)\n})"],"scope":"global","classdesc":"Audio is the base class for game audio, loaded into a HTML5 'audio' tag.","params":[{"type":{"names":["object"]},"description":"The options object for the Asset - see below","name":"options"}]},{"comment":"/**\n* Load the Audio asynchronously from its src and optionally trigger the supplied callback when available.\n* @param {function} callback The callback function to invoke when the asset has been loaded\n* @example\naudio.load((err, au) => {\nconsole.log(\"Audio \"+au.name+\" Loaded\")\n})\n*/","meta":{"range":[1142,1571],"filename":"Audio.js","lineno":38,"columnno":1,"path":"/lib","code":{"id":"astnode100000143","name":"Audio#load","type":"MethodDefinition","paramnames":["callback"]},"vars":{"":null}},"description":"Load the Audio asynchronously from its src and optionally trigger the supplied callback when available.","params":[{"type":{"names":["function"]},"description":"The callback function to invoke when the asset has been loaded","name":"callback"}],"examples":["audio.load((err, au) => {\n  console.log(\"Audio \"+au.name+\" Loaded\")\n}) "],"name":"load","longname":"Audio#load","kind":"function","memberof":"Audio","scope":"instance"},{"comment":"/**\n* Play the audio from the current position.\n*/","meta":{"range":[1628,1661],"filename":"Audio.js","lineno":53,"columnno":1,"path":"/lib","code":{"id":"astnode100000238","name":"Audio#play","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Play the audio from the current position.","name":"play","longname":"Audio#play","kind":"function","memberof":"Audio","scope":"instance","params":[]},{"comment":"/**\n* Play the audio from the start time index to the end time index and optionally loop.\n* @param {float} start The start offset in ms (optional)\n* @param {float} end The end offset in ms (optional)\n* @param {boolean} start Loop the audio (optional)\n*/","meta":{"range":[1924,2083],"filename":"Audio.js","lineno":63,"columnno":1,"path":"/lib","code":{"id":"astnode100000249","name":"Audio#playRange","type":"MethodDefinition","paramnames":["start","end","loop"]},"vars":{"":null}},"description":"Play the audio from the start time index to the end time index and optionally loop.","params":[{"type":{"names":["float"]},"description":"The start offset in ms (optional)","name":"start","defaultvalue":null},{"type":{"names":["float"]},"description":"The end offset in ms (optional)","name":"end","defaultvalue":null},{"type":{"names":["boolean"]},"description":"Loop the audio (optional)","name":"start"}],"name":"playRange","longname":"Audio#playRange","kind":"function","memberof":"Audio","scope":"instance"},{"comment":"/**\n* Pause the audio at the current position.\n*/","meta":{"range":[2139,2174],"filename":"Audio.js","lineno":73,"columnno":1,"path":"/lib","code":{"id":"astnode100000291","name":"Audio#pause","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Pause the audio at the current position.","name":"pause","longname":"Audio#pause","kind":"function","memberof":"Audio","scope":"instance","params":[]},{"comment":"/**\n* Stop the audio and reset it to the beginning\n*/","meta":{"range":[2234,2340],"filename":"Audio.js","lineno":80,"columnno":1,"path":"/lib","code":{"id":"astnode100000302","name":"Audio#stop","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Stop the audio and reset it to the beginning","name":"stop","longname":"Audio#stop","kind":"function","memberof":"Audio","scope":"instance","params":[]},{"comment":"/**\n* Fade out the audio over the given duration then call the optional callback\n* @param {integer} duration Fade duration in ms\n* @param {function} callback The callback function to invoke when the fade has completed\n*/","meta":{"range":[2569,2700],"filename":"Audio.js","lineno":91,"columnno":1,"path":"/lib","code":{"id":"astnode100000329","name":"Audio#fadeOut","type":"MethodDefinition","paramnames":["duration","callback"]},"vars":{"":null}},"description":"Fade out the audio over the given duration then call the optional callback","params":[{"type":{"names":["integer"]},"description":"Fade duration in ms","name":"duration","defaultvalue":1000},{"type":{"names":["function"]},"description":"The callback function to invoke when the fade has completed","name":"callback"}],"name":"fadeOut","longname":"Audio#fadeOut","kind":"function","memberof":"Audio","scope":"instance"},{"comment":"/**\n* Fade in the audio over the given duration then call the optional callback\n* @param {integer} duration Fade duration in ms\n* @param {function} callback The callback function to invoke when the fade has completed\n*/","meta":{"range":[2928,3082],"filename":"Audio.js","lineno":103,"columnno":1,"path":"/lib","code":{"id":"astnode100000358","name":"Audio#fadeIn","type":"MethodDefinition","paramnames":["duration","callback"]},"vars":{"":null}},"description":"Fade in the audio over the given duration then call the optional callback","params":[{"type":{"names":["integer"]},"description":"Fade duration in ms","name":"duration","defaultvalue":1000},{"type":{"names":["function"]},"description":"The callback function to invoke when the fade has completed","name":"callback"}],"name":"fadeIn","longname":"Audio#fadeIn","kind":"function","memberof":"Audio","scope":"instance"},{"comment":"","meta":{"range":[3085,3564],"filename":"Audio.js","lineno":111,"columnno":1,"path":"/lib","code":{"id":"astnode100000395","name":"Audio#_fade","type":"MethodDefinition","paramnames":["toValue","duration","callback"]},"vars":{"":null}},"undocumented":true,"name":"_fade","longname":"Audio#_fade","kind":"function","memberof":"Audio","scope":"instance","params":[]},{"comment":"","meta":{"range":[3567,3688],"filename":"Audio.js","lineno":131,"columnno":1,"path":"/lib","code":{"id":"astnode100000498","name":"Audio#_oncanplaythrough","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"undocumented":true,"name":"_oncanplaythrough","longname":"Audio#_oncanplaythrough","kind":"function","memberof":"Audio","scope":"instance","params":[]},{"comment":"","meta":{"range":[3692,3900],"filename":"Audio.js","lineno":139,"columnno":1,"path":"/lib","code":{"id":"astnode100000522","name":"Audio#_onloadedmetadata","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"undocumented":true,"name":"_onloadedmetadata","longname":"Audio#_onloadedmetadata","kind":"function","memberof":"Audio","scope":"instance","params":[]},{"comment":"","meta":{"range":[3903,4096],"filename":"Audio.js","lineno":146,"columnno":1,"path":"/lib","code":{"id":"astnode100000573","name":"Audio#_ontimeupdate","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"undocumented":true,"name":"_ontimeupdate","longname":"Audio#_ontimeupdate","kind":"function","memberof":"Audio","scope":"instance","params":[]},{"comment":"","meta":{"range":[6,32],"filename":"BackgroundScene.js","lineno":1,"columnno":6,"path":"/lib","code":{"id":"astnode100000624","name":"Scene","type":"CallExpression","value":""}},"undocumented":true,"name":"Scene","longname":"Scene","kind":"constant","scope":"global","params":[]},{"comment":"/**\n* BackgroundScene is the base class for static backgrounds.\n*\n* @extends Scene\n* @example\n<caption>Create a new BackgroundScene from an {@link Asset}</caption>\nvar mainMapBackgroundAsset = new Asset({ name: 'mainMapBackgroundAsset', src: 'assets/mainmap_background.png' })\nvar scene = new BackgroundScene({ asset: mainMapBackgroundAsset, x: 0, y: 0 })\n*/","meta":{"range":[399,2710],"filename":"BackgroundScene.js","lineno":12,"columnno":0,"path":"/lib","code":{"id":"astnode100000629","name":"BackgroundScene","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"BackgroundScene is the base class for static backgrounds.","augments":["Scene"],"examples":["<caption>Create a new BackgroundScene from an {@link Asset}</caption>\nvar mainMapBackgroundAsset = new Asset({ name: 'mainMapBackgroundAsset', src: 'assets/mainmap_background.png' })\nvar scene = new BackgroundScene({ asset: mainMapBackgroundAsset, x: 0, y: 0 })"],"name":"BackgroundScene","longname":"BackgroundScene","kind":"class","scope":"global","undocumented":true},{"comment":"/**\n* Create a new BackgroundScene with the specified options.\n* @param {object} options The options for the BackgroundScene, composed of the properties.\n* @property {integer} offsetX The offset x-coordinate in the asset in pixels (optional, default 0)\n* @property {integer} offsetY The offset y-coordinate in the asset in pixels (optional, default 0)\n* @property {integer} width The width in pixels (optional, default asset width)\n* @property {integer} height The height in pixels (optional, default asset height)\n*/","meta":{"range":[964,1336],"filename":"BackgroundScene.js","lineno":21,"columnno":1,"path":"/lib","code":{"id":"astnode100000633","name":"BackgroundScene","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Create a new BackgroundScene with the specified options.","params":[{"type":{"names":["object"]},"description":"The options for the BackgroundScene, composed of the properties.","name":"options"}],"properties":[{"type":{"names":["integer"]},"description":"The offset x-coordinate in the asset in pixels (optional, default 0)","name":"offsetX"},{"type":{"names":["integer"]},"description":"The offset y-coordinate in the asset in pixels (optional, default 0)","name":"offsetY"},{"type":{"names":["integer"]},"description":"The width in pixels (optional, default asset width)","name":"width"},{"type":{"names":["integer"]},"description":"The height in pixels (optional, default asset height)","name":"height"}],"name":"BackgroundScene","longname":"BackgroundScene","kind":"class","scope":"global","undocumented":true},{"comment":"/**\n* Create a new BackgroundScene with the specified options.\n* @param {object} options The options for the BackgroundScene, composed of the properties.\n* @property {integer} offsetX The offset x-coordinate in the asset in pixels (optional, default 0)\n* @property {integer} offsetY The offset y-coordinate in the asset in pixels (optional, default 0)\n* @property {integer} width The width in pixels (optional, default asset width)\n* @property {integer} height The height in pixels (optional, default asset height)\n*/","meta":{"range":[964,1336],"filename":"BackgroundScene.js","lineno":21,"columnno":1,"path":"/lib","code":{"id":"astnode100000633","name":"BackgroundScene","type":"MethodDefinition","paramnames":["options"]}},"name":"BackgroundScene","longname":"BackgroundScene","kind":"class","description":"Create a new BackgroundScene with the specified options.","scope":"global","classdesc":"BackgroundScene is the base class for static backgrounds.","augments":["Scene"],"examples":["<caption>Create a new BackgroundScene from an {@link Asset}</caption>\nvar mainMapBackgroundAsset = new Asset({ name: 'mainMapBackgroundAsset', src: 'assets/mainmap_background.png' })\nvar scene = new BackgroundScene({ asset: mainMapBackgroundAsset, x: 0, y: 0 })"],"params":[{"type":{"names":["object"]},"description":"The options for the BackgroundScene, composed of the properties.","name":"options"}],"properties":[{"type":{"names":["integer"]},"description":"The offset x-coordinate in the asset in pixels (optional, default 0)","name":"offsetX"},{"type":{"names":["integer"]},"description":"The offset y-coordinate in the asset in pixels (optional, default 0)","name":"offsetY"},{"type":{"names":["integer"]},"description":"The width in pixels (optional, default asset width)","name":"width"},{"type":{"names":["integer"]},"description":"The height in pixels (optional, default asset height)","name":"height"}]},{"comment":"/**\n* Draw the BackgroundScene into the given context\n* @param {CanvasRenderingContext2D} context The context in which to draw\n*/","meta":{"range":[1473,2708],"filename":"BackgroundScene.js","lineno":37,"columnno":1,"path":"/lib","code":{"id":"astnode100000726","name":"BackgroundScene#draw","type":"MethodDefinition","paramnames":["context"]},"vars":{"":null}},"description":"Draw the BackgroundScene into the given context","params":[{"type":{"names":["CanvasRenderingContext2D"]},"description":"The context in which to draw","name":"context"}],"name":"draw","longname":"BackgroundScene#draw","kind":"function","memberof":"BackgroundScene","scope":"instance"},{"comment":"","meta":{"range":[6,31],"filename":"Entity.js","lineno":1,"columnno":6,"path":"/lib","code":{"id":"astnode100000911","name":"_","type":"CallExpression","value":""}},"undocumented":true,"name":"_","longname":"_","kind":"constant","scope":"global","params":[]},{"comment":"","meta":{"range":[39,87],"filename":"Entity.js","lineno":3,"columnno":6,"path":"/lib","code":{"id":"astnode100000917","name":"HasEntitiesMixin","type":"CallExpression","value":""}},"undocumented":true,"name":"HasEntitiesMixin","longname":"HasEntitiesMixin","kind":"constant","scope":"global","params":[]},{"comment":"/**\n* Entity is the base class for subgraphics.\n* @mixes HasEntitiesMixin\n*/","meta":{"range":[169,8467],"filename":"Entity.js","lineno":9,"columnno":0,"path":"/lib","code":{"id":"astnode100000922","name":"Entity","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"Entity is the base class for subgraphics.","mixes":["HasEntitiesMixin"],"name":"Entity","longname":"Entity","kind":"class","scope":"global","undocumented":true},{"comment":"/**\n* Create a new Entity with the specified options\n* @param {Object} options The options for the Entity, composed of the properties.\n* @property {Asset} asset The {@link Asset} to use for the Entity tiles\n* @property {Object} parent The parent of this Entity\n* @property {integer} x The x-coordinate in pixels relative to its parent (optional, default 0)\n* @property {integer} y The y-coordinate in pixels relative to its parent (optional, default 0)\n* @property {integer} z The z-coordinate relative to its parent (optional, default 0)\n* @property {float} scale The current scale (zoom) where 1 = 100% (optional, default 1)\n* @property {float} rotate The current rotation where 0º (optional, default 0)\n* @property {boolean} visible Set if this Entity is visible (optional, default true)\n*/","meta":{"range":[992,2795],"filename":"Entity.js","lineno":22,"columnno":1,"path":"/lib","code":{"id":"astnode100000925","name":"Entity","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Create a new Entity with the specified options","params":[{"type":{"names":["Object"]},"description":"The options for the Entity, composed of the properties.","name":"options"}],"properties":[{"type":{"names":["Asset"]},"description":"The {@link Asset} to use for the Entity tiles","name":"asset"},{"type":{"names":["Object"]},"description":"The parent of this Entity","name":"parent"},{"type":{"names":["integer"]},"description":"The x-coordinate in pixels relative to its parent (optional, default 0)","name":"x"},{"type":{"names":["integer"]},"description":"The y-coordinate in pixels relative to its parent (optional, default 0)","name":"y"},{"type":{"names":["integer"]},"description":"The z-coordinate relative to its parent (optional, default 0)","name":"z"},{"type":{"names":["float"]},"description":"The current scale (zoom) where 1 = 100% (optional, default 1)","name":"scale"},{"type":{"names":["float"]},"description":"The current rotation where 0º (optional, default 0)","name":"rotate"},{"type":{"names":["boolean"]},"description":"Set if this Entity is visible (optional, default true)","name":"visible"}],"name":"Entity","longname":"Entity","kind":"class","scope":"global","undocumented":true},{"comment":"/**\n* Create a new Entity with the specified options\n* @param {Object} options The options for the Entity, composed of the properties.\n* @property {Asset} asset The {@link Asset} to use for the Entity tiles\n* @property {Object} parent The parent of this Entity\n* @property {integer} x The x-coordinate in pixels relative to its parent (optional, default 0)\n* @property {integer} y The y-coordinate in pixels relative to its parent (optional, default 0)\n* @property {integer} z The z-coordinate relative to its parent (optional, default 0)\n* @property {float} scale The current scale (zoom) where 1 = 100% (optional, default 1)\n* @property {float} rotate The current rotation where 0º (optional, default 0)\n* @property {boolean} visible Set if this Entity is visible (optional, default true)\n*/","meta":{"range":[992,2795],"filename":"Entity.js","lineno":22,"columnno":1,"path":"/lib","code":{"id":"astnode100000925","name":"Entity","type":"MethodDefinition","paramnames":["options"]}},"name":"Entity","longname":"Entity","kind":"class","description":"Create a new Entity with the specified options","scope":"global","classdesc":"Entity is the base class for subgraphics.","mixes":["HasEntitiesMixin"],"params":[{"type":{"names":["Object"]},"description":"The options for the Entity, composed of the properties.","name":"options"}],"properties":[{"type":{"names":["Asset"]},"description":"The {@link Asset} to use for the Entity tiles","name":"asset"},{"type":{"names":["Object"]},"description":"The parent of this Entity","name":"parent"},{"type":{"names":["integer"]},"description":"The x-coordinate in pixels relative to its parent (optional, default 0)","name":"x"},{"type":{"names":["integer"]},"description":"The y-coordinate in pixels relative to its parent (optional, default 0)","name":"y"},{"type":{"names":["integer"]},"description":"The z-coordinate relative to its parent (optional, default 0)","name":"z"},{"type":{"names":["float"]},"description":"The current scale (zoom) where 1 = 100% (optional, default 1)","name":"scale"},{"type":{"names":["float"]},"description":"The current rotation where 0º (optional, default 0)","name":"rotate"},{"type":{"names":["boolean"]},"description":"Set if this Entity is visible (optional, default true)","name":"visible"}]},{"comment":"// Mark the entity to be redrawn","meta":{"range":[2832,2938],"filename":"Entity.js","lineno":67,"columnno":1,"path":"/lib","code":{"id":"astnode100001109","name":"Entity#redraw","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"undocumented":true,"name":"redraw","longname":"Entity#redraw","kind":"function","memberof":"Entity","scope":"instance","params":[]},{"comment":"// Draw the entity into the supplied 2DContext","meta":{"range":[2989,3947],"filename":"Entity.js","lineno":76,"columnno":1,"path":"/lib","code":{"id":"astnode100001124","name":"Entity#draw","type":"MethodDefinition","paramnames":["context"]},"vars":{"":null}},"undocumented":true,"name":"draw","longname":"Entity#draw","kind":"function","memberof":"Entity","scope":"instance","params":[]},{"comment":"// Add an animation with the specified name and definition (def)\n// def is an array of the frame format [ tx, ty, dt, dx, dy ]:\n// * tx - Tile X Coordinate in the asset in units of tileWidth\n// * ty - Tile Y Coordinate in the asset in units of tileHeight\n// * dt - (optional) Delay after this frame\n// * dx - (optional) x Delta at this frame (move x pixels)\n// * dx - (optional) y Delta at this frame (move y pixels)","meta":{"range":[4377,4436],"filename":"Entity.js","lineno":120,"columnno":1,"path":"/lib","code":{"id":"astnode100001257","name":"Entity#addAnimation","type":"MethodDefinition","paramnames":["name","def"]},"vars":{"":null}},"undocumented":true,"name":"addAnimation","longname":"Entity#addAnimation","kind":"function","memberof":"Entity","scope":"instance","params":[]},{"comment":"// Start an animation\n// animation is an object with the following properties:\n// * name     - The name of the animation to start, must have been previously defined by addAnimation\n// * delay    - Default delay for each frame (unless overridden by the dt in the frame)\n// * frame    - (optional) The starting frame, defaults to 0\n// * loop     - (optional) Loop the animation (i) indefinitely if 'true' (ii) this number of times.\n// * dx       - (optional) x Delta at every frame (move x pixels), unless overridden by the dx in the frame\n// * dy       - (optional) y Delta at every frame (move y pixels), unless overridden by the dy in the frame\n// * minX     - (optional) Stop the animation when the x is equal or less than this value\n// * minY     - (optional) Stop the animation when the y is equal or less than this value\n// * maxX     - (optional) Stop the animation when the x is equal or greater than this value\n// * maxY     - (optional) Stop the animation when the y is equal or greater than this value\n// * stopTile - (optional) Set this tile [x,y] when the animation stops\n// * onStop   - (optional) A function to call when the animation stops, fn(entity) where entity is this entity.","meta":{"range":[5649,7955],"filename":"Entity.js","lineno":138,"columnno":1,"path":"/lib","code":{"id":"astnode100001271","name":"Entity#animateStart","type":"MethodDefinition","paramnames":["animation"]},"vars":{"":null}},"undocumented":true,"name":"animateStart","longname":"Entity#animateStart","kind":"function","memberof":"Entity","scope":"instance","params":[]},{"comment":"// Stop with an optional Stop Status","meta":{"range":[7996,8465],"filename":"Entity.js","lineno":210,"columnno":1,"path":"/lib","code":{"id":"astnode100001594","name":"Entity#animateStop","type":"MethodDefinition","paramnames":["stopStatus"]},"vars":{"":null}},"undocumented":true,"name":"animateStop","longname":"Entity#animateStop","kind":"function","memberof":"Entity","scope":"instance","params":[]},{"comment":"/**\n*  The animation stopped because it was finished (non-looped) or a boundary condition was met (maxX, maxY)\n* @constant\n*/","meta":{"range":[8598,8629],"filename":"Entity.js","lineno":227,"columnno":0,"path":"/lib","code":{"id":"astnode100001683","name":"Entity.STOPSTATUS_COMPLETED","type":"Literal","value":1,"paramnames":[]}},"description":"The animation stopped because it was finished (non-looped) or a boundary condition was met (maxX, maxY)","kind":"constant","name":"STOPSTATUS_COMPLETED","longname":"Entity.STOPSTATUS_COMPLETED","memberof":"Entity","scope":"static"},{"comment":"/**\n* The animation was stopped with animateStop\n* @constant\n*/","meta":{"range":[8697,8726],"filename":"Entity.js","lineno":232,"columnno":0,"path":"/lib","code":{"id":"astnode100001689","name":"Entity.STOPSTATUS_STOPPED","type":"Literal","value":2,"paramnames":[]}},"description":"The animation was stopped with animateStop","kind":"constant","name":"STOPSTATUS_STOPPED","longname":"Entity.STOPSTATUS_STOPPED","memberof":"Entity","scope":"static"},{"comment":"/**\n* The animation was stopped because animateStart was called with a new animation, replacing it\n* @constant\n*/","meta":{"range":[8844,8874],"filename":"Entity.js","lineno":237,"columnno":0,"path":"/lib","code":{"id":"astnode100001695","name":"Entity.STOPSTATUS_REPLACED","type":"Literal","value":3,"paramnames":[]}},"description":"The animation was stopped because animateStart was called with a new animation, replacing it","kind":"constant","name":"STOPSTATUS_REPLACED","longname":"Entity.STOPSTATUS_REPLACED","memberof":"Entity","scope":"static"},{"comment":"","meta":{"range":[6,30],"filename":"GameEngine.js","lineno":1,"columnno":6,"path":"/lib","code":{"id":"astnode100001709","name":"async","type":"CallExpression","value":""}},"undocumented":true,"name":"async","longname":"async","kind":"constant","scope":"global","params":[]},{"comment":"","meta":{"range":[37,62],"filename":"GameEngine.js","lineno":2,"columnno":6,"path":"/lib","code":{"id":"astnode100001715","name":"_","type":"CallExpression","value":""}},"undocumented":true,"name":"_","longname":"_","kind":"constant","scope":"global","params":[]},{"comment":"","meta":{"range":[70,96],"filename":"GameEngine.js","lineno":4,"columnno":6,"path":"/lib","code":{"id":"astnode100001721","name":"Asset","type":"CallExpression","value":""}},"undocumented":true,"name":"Asset","longname":"Asset","kind":"constant","scope":"global","params":[]},{"comment":"","meta":{"range":[103,129],"filename":"GameEngine.js","lineno":5,"columnno":6,"path":"/lib","code":{"id":"astnode100001727","name":"Audio","type":"CallExpression","value":""}},"undocumented":true,"name":"Audio","longname":"Audio","kind":"constant","scope":"global","params":[]},{"comment":"","meta":{"range":[136,164],"filename":"GameEngine.js","lineno":6,"columnno":6,"path":"/lib","code":{"id":"astnode100001733","name":"Entity","type":"CallExpression","value":""}},"undocumented":true,"name":"Entity","longname":"Entity","kind":"constant","scope":"global","params":[]},{"comment":"","meta":{"range":[172,220],"filename":"GameEngine.js","lineno":8,"columnno":6,"path":"/lib","code":{"id":"astnode100001739","name":"HasEntitiesMixin","type":"CallExpression","value":""}},"undocumented":true,"name":"HasEntitiesMixin","longname":"HasEntitiesMixin","kind":"constant","scope":"global","params":[]},{"comment":"","meta":{"range":[227,271],"filename":"GameEngine.js","lineno":9,"columnno":6,"path":"/lib","code":{"id":"astnode100001745","name":"HasScenesMixin","type":"CallExpression","value":""}},"undocumented":true,"name":"HasScenesMixin","longname":"HasScenesMixin","kind":"constant","scope":"global","params":[]},{"comment":"/**\n*  GameEngine is the base class for the top level container, mapping the game into a browser.\n*  You should extend GameEngine to implement your own game.\n*/","meta":{"range":[437,13060],"filename":"GameEngine.js","lineno":15,"columnno":0,"path":"/lib","code":{"id":"astnode100001750","name":"GameEngine","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"GameEngine is the base class for the top level container, mapping the game into a browser.\n You should extend GameEngine to implement your own game.","name":"GameEngine","longname":"GameEngine","kind":"class","scope":"global","undocumented":true},{"comment":"/**\n* Create a new GameEngine with the specified options.\n* @param {object} options The options for the GameEngine, composed of the properties.\n* @property {!string} targetId The DOM id of the element to target. This element will be replaced with a HTML5 'canvas' element.\n* @property {boolean} fullscreen Allow the canvas element to occupy the maximum possible space (optional, default false)\n* @property {boolean} showHUD Show the debug Heads Up Display (HUD)  (optional, default false)\n* @property {integer} x The viewport x-coordinate in pixels (optional, default 0)\n* @property {integer} y The viewport y-coordinate in pixels (optional, default 0)\n* @property {float} scale The current scale (zoom) where 1 = 100% (optional, default 1)\n* @property {integer} minX The minimum viewport x-coordinate in pixels (optional)\n* @property {integer} minY The minimum viewport y-coordinate in pixels (optional)\n* @property {integer} maxX The maximum viewport x-coordinate in pixels (optional)\n* @property {integer} maxY The maximum viewport y-coordinate in pixels (optional)\n* @property {float} globalAlpha The global alpha value (0 to 1) for drawing scenes (optional, default 1)\n* @property {boolean} enableScroll Enable mouse scrolling (optional, default true)\n* @property {boolean} enableZoom Enable mouse zooming (optional, default true)\n* @property {integer} width The width of the viewport in pixels (readonly)\n* @property {integer} height The height of the viewport in pixels (readonly)\n* @mixes HasScenesMixin\n* @mixes HasEntitiesMixin\n* @example <caption>To create a GameEngine attached to a specified element in HTML5</caption>\n<div id='game' width=\"1200\" height=\"960\"></div>\n<script type=\"text/javascript\">\nconst GameEngine = require('GameEngine')\nvar game = new GameEngine({ targetId: 'game', fullscreen: true, showHUD: true });\ngame.start();\n</script>\n*/","meta":{"range":[2344,3846],"filename":"GameEngine.js","lineno":44,"columnno":1,"path":"/lib","code":{"id":"astnode100001753","name":"GameEngine","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Create a new GameEngine with the specified options.","params":[{"type":{"names":["object"]},"description":"The options for the GameEngine, composed of the properties.","name":"options"}],"properties":[{"type":{"names":["string"]},"nullable":false,"description":"The DOM id of the element to target. This element will be replaced with a HTML5 'canvas' element.","name":"targetId"},{"type":{"names":["boolean"]},"description":"Allow the canvas element to occupy the maximum possible space (optional, default false)","name":"fullscreen"},{"type":{"names":["boolean"]},"description":"Show the debug Heads Up Display (HUD)  (optional, default false)","name":"showHUD"},{"type":{"names":["integer"]},"description":"The viewport x-coordinate in pixels (optional, default 0)","name":"x"},{"type":{"names":["integer"]},"description":"The viewport y-coordinate in pixels (optional, default 0)","name":"y"},{"type":{"names":["float"]},"description":"The current scale (zoom) where 1 = 100% (optional, default 1)","name":"scale"},{"type":{"names":["integer"]},"description":"The minimum viewport x-coordinate in pixels (optional)","name":"minX"},{"type":{"names":["integer"]},"description":"The minimum viewport y-coordinate in pixels (optional)","name":"minY"},{"type":{"names":["integer"]},"description":"The maximum viewport x-coordinate in pixels (optional)","name":"maxX"},{"type":{"names":["integer"]},"description":"The maximum viewport y-coordinate in pixels (optional)","name":"maxY"},{"type":{"names":["float"]},"description":"The global alpha value (0 to 1) for drawing scenes (optional, default 1)","name":"globalAlpha"},{"type":{"names":["boolean"]},"description":"Enable mouse scrolling (optional, default true)","name":"enableScroll"},{"type":{"names":["boolean"]},"description":"Enable mouse zooming (optional, default true)","name":"enableZoom"},{"type":{"names":["integer"]},"description":"The width of the viewport in pixels (readonly)","name":"width"},{"type":{"names":["integer"]},"description":"The height of the viewport in pixels (readonly)","name":"height"}],"mixes":["HasScenesMixin","HasEntitiesMixin"],"examples":["<caption>To create a GameEngine attached to a specified element in HTML5</caption>\n<div id='game' width=\"1200\" height=\"960\"></div>\n<script type=\"text/javascript\">\n\tconst GameEngine = require('GameEngine')\n\tvar game = new GameEngine({ targetId: 'game', fullscreen: true, showHUD: true });\n\tgame.start();\n</script>"],"name":"GameEngine","longname":"GameEngine","kind":"class","scope":"global","undocumented":true},{"comment":"/**\n* Create a new GameEngine with the specified options.\n* @param {object} options The options for the GameEngine, composed of the properties.\n* @property {!string} targetId The DOM id of the element to target. This element will be replaced with a HTML5 'canvas' element.\n* @property {boolean} fullscreen Allow the canvas element to occupy the maximum possible space (optional, default false)\n* @property {boolean} showHUD Show the debug Heads Up Display (HUD)  (optional, default false)\n* @property {integer} x The viewport x-coordinate in pixels (optional, default 0)\n* @property {integer} y The viewport y-coordinate in pixels (optional, default 0)\n* @property {float} scale The current scale (zoom) where 1 = 100% (optional, default 1)\n* @property {integer} minX The minimum viewport x-coordinate in pixels (optional)\n* @property {integer} minY The minimum viewport y-coordinate in pixels (optional)\n* @property {integer} maxX The maximum viewport x-coordinate in pixels (optional)\n* @property {integer} maxY The maximum viewport y-coordinate in pixels (optional)\n* @property {float} globalAlpha The global alpha value (0 to 1) for drawing scenes (optional, default 1)\n* @property {boolean} enableScroll Enable mouse scrolling (optional, default true)\n* @property {boolean} enableZoom Enable mouse zooming (optional, default true)\n* @property {integer} width The width of the viewport in pixels (readonly)\n* @property {integer} height The height of the viewport in pixels (readonly)\n* @mixes HasScenesMixin\n* @mixes HasEntitiesMixin\n* @example <caption>To create a GameEngine attached to a specified element in HTML5</caption>\n<div id='game' width=\"1200\" height=\"960\"></div>\n<script type=\"text/javascript\">\nconst GameEngine = require('GameEngine')\nvar game = new GameEngine({ targetId: 'game', fullscreen: true, showHUD: true });\ngame.start();\n</script>\n*/","meta":{"range":[2344,3846],"filename":"GameEngine.js","lineno":44,"columnno":1,"path":"/lib","code":{"id":"astnode100001753","name":"GameEngine","type":"MethodDefinition","paramnames":["options"]}},"name":"GameEngine","longname":"GameEngine","kind":"class","description":"Create a new GameEngine with the specified options.","mixes":["HasScenesMixin","HasEntitiesMixin"],"examples":["<caption>To create a GameEngine attached to a specified element in HTML5</caption>\n<div id='game' width=\"1200\" height=\"960\"></div>\n<script type=\"text/javascript\">\n\tconst GameEngine = require('GameEngine')\n\tvar game = new GameEngine({ targetId: 'game', fullscreen: true, showHUD: true });\n\tgame.start();\n</script>"],"scope":"global","classdesc":"GameEngine is the base class for the top level container, mapping the game into a browser.\n You should extend GameEngine to implement your own game.","params":[{"type":{"names":["object"]},"description":"The options for the GameEngine, composed of the properties.","name":"options"}],"properties":[{"type":{"names":["string"]},"nullable":false,"description":"The DOM id of the element to target. This element will be replaced with a HTML5 'canvas' element.","name":"targetId"},{"type":{"names":["boolean"]},"description":"Allow the canvas element to occupy the maximum possible space (optional, default false)","name":"fullscreen"},{"type":{"names":["boolean"]},"description":"Show the debug Heads Up Display (HUD)  (optional, default false)","name":"showHUD"},{"type":{"names":["integer"]},"description":"The viewport x-coordinate in pixels (optional, default 0)","name":"x"},{"type":{"names":["integer"]},"description":"The viewport y-coordinate in pixels (optional, default 0)","name":"y"},{"type":{"names":["float"]},"description":"The current scale (zoom) where 1 = 100% (optional, default 1)","name":"scale"},{"type":{"names":["integer"]},"description":"The minimum viewport x-coordinate in pixels (optional)","name":"minX"},{"type":{"names":["integer"]},"description":"The minimum viewport y-coordinate in pixels (optional)","name":"minY"},{"type":{"names":["integer"]},"description":"The maximum viewport x-coordinate in pixels (optional)","name":"maxX"},{"type":{"names":["integer"]},"description":"The maximum viewport y-coordinate in pixels (optional)","name":"maxY"},{"type":{"names":["float"]},"description":"The global alpha value (0 to 1) for drawing scenes (optional, default 1)","name":"globalAlpha"},{"type":{"names":["boolean"]},"description":"Enable mouse scrolling (optional, default true)","name":"enableScroll"},{"type":{"names":["boolean"]},"description":"Enable mouse zooming (optional, default true)","name":"enableZoom"},{"type":{"names":["integer"]},"description":"The width of the viewport in pixels (readonly)","name":"width"},{"type":{"names":["integer"]},"description":"The height of the viewport in pixels (readonly)","name":"height"}]},{"comment":"/**\n* Start the game, loading all {@link Asset}s and {@link Audio}s defined by [addAsset()]{@link GameEngine#addAsset} and [addAudio()]{@link GameEngine#addAudio}, bind to the HTML element, call [init()]{@link GameEngine#init} and start the renderer.\n*\n* @param {function} callback The callback function to invoke when the game has been started (optional)\n*/","meta":{"range":[4213,4906],"filename":"GameEngine.js","lineno":93,"columnno":1,"path":"/lib","code":{"id":"astnode100001962","name":"GameEngine#start","type":"MethodDefinition","paramnames":["callback"]},"vars":{"":null}},"description":"Start the game, loading all {@link Asset}s and {@link Audio}s defined by [addAsset()]{@link GameEngine#addAsset} and [addAudio()]{@link GameEngine#addAudio}, bind to the HTML element, call [init()]{@link GameEngine#init} and start the renderer.","params":[{"type":{"names":["function"]},"description":"The callback function to invoke when the game has been started (optional)","name":"callback"}],"name":"start","longname":"GameEngine#start","kind":"function","memberof":"GameEngine","scope":"instance"},{"comment":"","meta":{"range":[4286,4334],"filename":"GameEngine.js","lineno":96,"columnno":3,"path":"/lib","code":{"id":"astnode100001979","name":"document.onkeyup","type":"ArrowFunctionExpression","paramnames":["e"]}},"undocumented":true,"name":"onkeyup","longname":"document.onkeyup","kind":"function","memberof":"document","scope":"static"},{"comment":"","meta":{"range":[4909,4956],"filename":"GameEngine.js","lineno":128,"columnno":1,"path":"/lib","code":{"id":"astnode100002096","name":"GameEngine#setGlobalAlpha","type":"MethodDefinition","paramnames":["ga"]},"vars":{"":null}},"undocumented":true,"name":"setGlobalAlpha","longname":"GameEngine#setGlobalAlpha","kind":"function","memberof":"GameEngine","scope":"instance","params":[]},{"comment":"","meta":{"range":[4959,5374],"filename":"GameEngine.js","lineno":132,"columnno":1,"path":"/lib","code":{"id":"astnode100002107","name":"GameEngine#_bindMouseWheel","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"undocumented":true,"name":"_bindMouseWheel","longname":"GameEngine#_bindMouseWheel","kind":"function","memberof":"GameEngine","scope":"instance","params":[]},{"comment":"/**\n* Init is called after asset and audio loading. You should override init to create your Scenes, Entities and other game objects.\n*\n* Note: If you override init, you *must* call the callback when done.\n* @param {function} callback The callback function to invoke when the init has been completed\n*/","meta":{"range":[5685,5741],"filename":"GameEngine.js","lineno":152,"columnno":1,"path":"/lib","code":{"id":"astnode100002199","name":"GameEngine#init","type":"MethodDefinition","paramnames":["callback"]},"vars":{"":null}},"description":"Init is called after asset and audio loading. You should override init to create your Scenes, Entities and other game objects.\n\nNote: If you override init, you *must* call the callback when done.","params":[{"type":{"names":["function"]},"description":"The callback function to invoke when the init has been completed","name":"callback"}],"name":"init","longname":"GameEngine#init","kind":"function","memberof":"GameEngine","scope":"instance"},{"comment":"","meta":{"range":[5744,5778],"filename":"GameEngine.js","lineno":157,"columnno":1,"path":"/lib","code":{"id":"astnode100002213","name":"GameEngine#stop","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"undocumented":true,"name":"stop","longname":"GameEngine#stop","kind":"function","memberof":"GameEngine","scope":"instance","params":[]},{"comment":"/**\n* Add an asset definition. Note that the {@link Asset} resource will not be created until [start()]{@link GameEngine#start} is called.\n* @param {String} name Asset Name\n* @param {String} src Source filename\n*/","meta":{"range":[6000,6054],"filename":"GameEngine.js","lineno":166,"columnno":1,"path":"/lib","code":{"id":"astnode100002223","name":"GameEngine#addAsset","type":"MethodDefinition","paramnames":["name","src"]},"vars":{"":null}},"description":"Add an asset definition. Note that the {@link Asset} resource will not be created until [start()]{@link GameEngine#start} is called.","params":[{"type":{"names":["String"]},"description":"Asset Name","name":"name"},{"type":{"names":["String"]},"description":"Source filename","name":"src"}],"name":"addAsset","longname":"GameEngine#addAsset","kind":"function","memberof":"GameEngine","scope":"instance"},{"comment":"/**\n* Get the {@link Asset} with the specified name.\n* @param {String} name Asset Name\n* @returns {Asset} The Asset with the specified name, or null\n* @throws {Exception} Will throw 'Asset not found' if the Asset has not been loaded\n*/","meta":{"range":[6299,6402],"filename":"GameEngine.js","lineno":176,"columnno":1,"path":"/lib","code":{"id":"astnode100002237","name":"GameEngine#getAsset","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"description":"Get the {@link Asset} with the specified name.","params":[{"type":{"names":["String"]},"description":"Asset Name","name":"name"}],"returns":[{"type":{"names":["Asset"]},"description":"The Asset with the specified name, or null"}],"exceptions":[{"type":{"names":["Exception"]},"description":"Will throw 'Asset not found' if the Asset has not been loaded"}],"name":"getAsset","longname":"GameEngine#getAsset","kind":"function","memberof":"GameEngine","scope":"instance"},{"comment":"/**\n* Add an audio definition. Note that the {@link Audio} resource will not be created until [start()]{@link GameEngine#start} is called.\n* @param {String} name Audio Name\n* @param {String} src Source filename\n* @param {String} type MIME type\n*/","meta":{"range":[6658,6737],"filename":"GameEngine.js","lineno":187,"columnno":1,"path":"/lib","code":{"id":"astnode100002259","name":"GameEngine#addAudio","type":"MethodDefinition","paramnames":["name","src","type"]},"vars":{"":null}},"description":"Add an audio definition. Note that the {@link Audio} resource will not be created until [start()]{@link GameEngine#start} is called.","params":[{"type":{"names":["String"]},"description":"Audio Name","name":"name"},{"type":{"names":["String"]},"description":"Source filename","name":"src"},{"type":{"names":["String"]},"description":"MIME type","name":"type"}],"name":"addAudio","longname":"GameEngine#addAudio","kind":"function","memberof":"GameEngine","scope":"instance"},{"comment":"/**\n* Get the {@link Audio} with the specified name.\n* @param {String} name Audio Name\n* @returns {Audio} The Audio with the specified name, or null\n* @throws {Exception} Will throw 'Audio not found' if the Audio has not been loaded\n*/","meta":{"range":[6982,7083],"filename":"GameEngine.js","lineno":197,"columnno":1,"path":"/lib","code":{"id":"astnode100002278","name":"GameEngine#getAudio","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"description":"Get the {@link Audio} with the specified name.","params":[{"type":{"names":["String"]},"description":"Audio Name","name":"name"}],"returns":[{"type":{"names":["Audio"]},"description":"The Audio with the specified name, or null"}],"exceptions":[{"type":{"names":["Exception"]},"description":"Will throw 'Audio not found' if the Audio has not been loaded"}],"name":"getAudio","longname":"GameEngine#getAudio","kind":"function","memberof":"GameEngine","scope":"instance"},{"comment":"/**\n* Mark the whole GameEngine to be redrawn.\n*/","meta":{"range":[7139,7268],"filename":"GameEngine.js","lineno":205,"columnno":1,"path":"/lib","code":{"id":"astnode100002300","name":"GameEngine#redraw","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Mark the whole GameEngine to be redrawn.","name":"redraw","longname":"GameEngine#redraw","kind":"function","memberof":"GameEngine","scope":"instance","params":[]},{"comment":"","meta":{"range":[7271,8108],"filename":"GameEngine.js","lineno":215,"columnno":1,"path":"/lib","code":{"id":"astnode100002320","name":"GameEngine#_tick","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"undocumented":true,"name":"_tick","longname":"GameEngine#_tick","kind":"function","memberof":"GameEngine","scope":"instance","params":[]},{"comment":"/**\n* Create and Load all defined {@link Asset}s.\n* @param {function} callback The callback function to invoke when all assets have been loaded (optional)\n*/","meta":{"range":[8273,8529],"filename":"GameEngine.js","lineno":258,"columnno":1,"path":"/lib","code":{"id":"astnode100002477","name":"GameEngine#loadAssets","type":"MethodDefinition","paramnames":["callback"]},"vars":{"":null}},"description":"Create and Load all defined {@link Asset}s.","params":[{"type":{"names":["function"]},"description":"The callback function to invoke when all assets have been loaded (optional)","name":"callback"}],"name":"loadAssets","longname":"GameEngine#loadAssets","kind":"function","memberof":"GameEngine","scope":"instance"},{"comment":"/**\n* Create and Load all defined {@link Audio}s.\n* @param {function} callback The callback function to invoke when all assets have been loaded (optional)\n*/","meta":{"range":[8694,8980],"filename":"GameEngine.js","lineno":272,"columnno":1,"path":"/lib","code":{"id":"astnode100002539","name":"GameEngine#loadAudio","type":"MethodDefinition","paramnames":["callback"]},"vars":{"":null}},"description":"Create and Load all defined {@link Audio}s.","params":[{"type":{"names":["function"]},"description":"The callback function to invoke when all assets have been loaded (optional)","name":"callback"}],"name":"loadAudio","longname":"GameEngine#loadAudio","kind":"function","memberof":"GameEngine","scope":"instance"},{"comment":"/**\n* Boot the GameEngine into an HTML 'canvas' element, and replace the DOM element specified by {@link GameEngine.targetId} with it\n* @param {function} callback The callback function to invoke when the element has been replaced (optional)\n*/","meta":{"range":[9231,10023],"filename":"GameEngine.js","lineno":286,"columnno":1,"path":"/lib","code":{"id":"astnode100002611","name":"GameEngine#bootElement","type":"MethodDefinition","paramnames":["callback"]},"vars":{"":null}},"description":"Boot the GameEngine into an HTML 'canvas' element, and replace the DOM element specified by {@link GameEngine.targetId} with it","params":[{"type":{"names":["function"]},"description":"The callback function to invoke when the element has been replaced (optional)","name":"callback"}],"name":"bootElement","longname":"GameEngine#bootElement","kind":"function","memberof":"GameEngine","scope":"instance"},{"comment":"/**\n* Recompute the [width]{@link GameEngine.width} and [height]{@link GameEngine.height} from the 'canvas' element dimensions and call [redraw()]{@link GameEngine#redraw}\n*/","meta":{"range":[10204,10494],"filename":"GameEngine.js","lineno":314,"columnno":1,"path":"/lib","code":{"id":"astnode100002786","name":"GameEngine#recomputeFullScreen","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Recompute the [width]{@link GameEngine.width} and [height]{@link GameEngine.height} from the 'canvas' element dimensions and call [redraw()]{@link GameEngine#redraw}","name":"recomputeFullScreen","longname":"GameEngine#recomputeFullScreen","kind":"function","memberof":"GameEngine","scope":"instance","params":[]},{"comment":"","meta":{"range":[10497,10815],"filename":"GameEngine.js","lineno":323,"columnno":1,"path":"/lib","code":{"id":"astnode100002861","name":"GameEngine#fadeIn","type":"MethodDefinition","paramnames":["duration"]},"vars":{"":null}},"undocumented":true,"name":"fadeIn","longname":"GameEngine#fadeIn","kind":"function","memberof":"GameEngine","scope":"instance","params":[]},{"comment":"","meta":{"range":[10818,11137],"filename":"GameEngine.js","lineno":338,"columnno":1,"path":"/lib","code":{"id":"astnode100002932","name":"GameEngine#fadeOut","type":"MethodDefinition","paramnames":["duration"]},"vars":{"":null}},"undocumented":true,"name":"fadeOut","longname":"GameEngine#fadeOut","kind":"function","memberof":"GameEngine","scope":"instance","params":[]},{"comment":"// Event Handlers","meta":{"range":[11159,12177],"filename":"GameEngine.js","lineno":354,"columnno":1,"path":"/lib","code":{"id":"astnode100003003","name":"GameEngine#_panZoom","type":"MethodDefinition","paramnames":["e"]},"vars":{"":null}},"undocumented":true,"name":"_panZoom","longname":"GameEngine#_panZoom","kind":"function","memberof":"GameEngine","scope":"instance","params":[]},{"comment":"","meta":{"range":[12180,12305],"filename":"GameEngine.js","lineno":392,"columnno":1,"path":"/lib","code":{"id":"astnode100003278","name":"GameEngine#_move","type":"MethodDefinition","paramnames":["e"]},"vars":{"":null}},"undocumented":true,"name":"_move","longname":"GameEngine#_move","kind":"function","memberof":"GameEngine","scope":"instance","params":[]},{"comment":"","meta":{"range":[12308,12411],"filename":"GameEngine.js","lineno":402,"columnno":1,"path":"/lib","code":{"id":"astnode100003304","name":"GameEngine#_setMouseCoords","type":"MethodDefinition","paramnames":["e"]},"vars":{"":null}},"undocumented":true,"name":"_setMouseCoords","longname":"GameEngine#_setMouseCoords","kind":"function","memberof":"GameEngine","scope":"instance","params":[]},{"comment":"","meta":{"range":[12414,13027],"filename":"GameEngine.js","lineno":407,"columnno":1,"path":"/lib","code":{"id":"astnode100003341","name":"GameEngine#drawHUD","type":"MethodDefinition","paramnames":["context"]},"vars":{"":null}},"undocumented":true,"name":"drawHUD","longname":"GameEngine#drawHUD","kind":"function","memberof":"GameEngine","scope":"instance","params":[]},{"comment":"","meta":{"range":[13030,13044],"filename":"GameEngine.js","lineno":424,"columnno":1,"path":"/lib","code":{"id":"astnode100003512","name":"GameEngine#mousedown","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"undocumented":true,"name":"mousedown","longname":"GameEngine#mousedown","kind":"function","memberof":"GameEngine","scope":"instance","params":[]},{"comment":"","meta":{"range":[13046,13058],"filename":"GameEngine.js","lineno":425,"columnno":1,"path":"/lib","code":{"id":"astnode100003516","name":"GameEngine#mouseup","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"undocumented":true,"name":"mouseup","longname":"GameEngine#mouseup","kind":"function","memberof":"GameEngine","scope":"instance","params":[]},{"comment":"","meta":{"range":[6,31],"filename":"HasEntitiesMixin.js","lineno":1,"columnno":6,"path":"/lib","code":{"id":"astnode100003529","name":"_","type":"CallExpression","value":""}},"undocumented":true,"name":"_","longname":"_","kind":"constant","scope":"global","params":[]},{"comment":"","meta":{"range":[38,64],"filename":"HasEntitiesMixin.js","lineno":2,"columnno":6,"path":"/lib","code":{"id":"astnode100003535","name":"Mixin","type":"CallExpression","value":""}},"undocumented":true,"name":"Mixin","longname":"Mixin","kind":"constant","scope":"global","params":[]},{"comment":"/**\n* HasEntitiesMixin is a {@link Mixin} to add a collection of {@link Entity}s to a class\n* @hideconstructor\n*/","meta":{"range":[373,3088],"filename":"HasEntitiesMixin.js","lineno":14,"columnno":0,"path":"/lib","code":{"id":"astnode100003540","name":"HasEntitiesMixin","type":"ClassDeclaration","paramnames":[]}},"classdesc":"HasEntitiesMixin is a {@link Mixin} to add a collection of {@link Entity}s to a class","hideconstructor":true,"name":"HasEntitiesMixin","longname":"HasEntitiesMixin","kind":"class","scope":"global"},{"comment":"","meta":{"range":[413,524],"filename":"HasEntitiesMixin.js","lineno":15,"columnno":1,"path":"/lib","code":{"id":"astnode100003544","name":"HasEntitiesMixin.init","type":"MethodDefinition","paramnames":["obj","options"]},"vars":{"":null}},"undocumented":true,"name":"init","longname":"HasEntitiesMixin.init","kind":"function","memberof":"HasEntitiesMixin","scope":"static","params":[]},{"comment":"/**\n* Add a entity to this container with the given name.\n* @param {String} name The name to assign to the entity\n* @param {Entity} entity The Entity to add\n*/","meta":{"range":[692,895],"filename":"HasEntitiesMixin.js","lineno":26,"columnno":1,"path":"/lib","code":{"id":"astnode100003570","name":"HasEntitiesMixin#addEntity","type":"MethodDefinition","paramnames":["name","entity"]},"vars":{"":null}},"description":"Add a entity to this container with the given name.","params":[{"type":{"names":["String"]},"description":"The name to assign to the entity","name":"name"},{"type":{"names":["Entity"]},"description":"The Entity to add","name":"entity"}],"name":"addEntity","longname":"HasEntitiesMixin#addEntity","kind":"function","memberof":"HasEntitiesMixin","scope":"instance"},{"comment":"/**\n* Remove a named entity from this container, will trigger a redraw if defined on the container class\n* @param {String} name The name of the entity to remove\n*/","meta":{"range":[1066,1151],"filename":"HasEntitiesMixin.js","lineno":38,"columnno":1,"path":"/lib","code":{"id":"astnode100003616","name":"HasEntitiesMixin#removeEntity","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"description":"Remove a named entity from this container, will trigger a redraw if defined on the container class","params":[{"type":{"names":["String"]},"description":"The name of the entity to remove","name":"name"}],"name":"removeEntity","longname":"HasEntitiesMixin#removeEntity","kind":"function","memberof":"HasEntitiesMixin","scope":"instance"},{"comment":"/**\n* Return the entity with the given name. Throws an exception if the entity is not found.\n* @param {String} name The name of the entity to return\n* @returns {Entity} The Entity with the given name if found\n* @throws {Exception} 'Entity not found' if the entity is not found\n*/","meta":{"range":[1440,1551],"filename":"HasEntitiesMixin.js","lineno":49,"columnno":1,"path":"/lib","code":{"id":"astnode100003637","name":"HasEntitiesMixin#getEntity","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"description":"Return the entity with the given name. Throws an exception if the entity is not found.","params":[{"type":{"names":["String"]},"description":"The name of the entity to return","name":"name"}],"returns":[{"type":{"names":["Entity"]},"description":"The Entity with the given name if found"}],"exceptions":[{"type":{"names":["Exception"]},"description":"'Entity not found' if the entity is not found"}],"name":"getEntity","longname":"HasEntitiesMixin#getEntity","kind":"function","memberof":"HasEntitiesMixin","scope":"instance"},{"comment":"/**\n* Draw entities in z-order\n* @param {CanvasRenderingContext2D} context The context in which to draw\n* @param {integer} z If specified, only draw entities with this z-layer (mapped by [sortEntitiesZ()]{@link HasEntities#sortEntitiesZ})\n*/","meta":{"range":[1802,2070],"filename":"HasEntitiesMixin.js","lineno":59,"columnno":1,"path":"/lib","code":{"id":"astnode100003659","name":"HasEntitiesMixin#drawEntities","type":"MethodDefinition","paramnames":["context","z"]},"vars":{"":null}},"description":"Draw entities in z-order","params":[{"type":{"names":["CanvasRenderingContext2D"]},"description":"The context in which to draw","name":"context"},{"type":{"names":["integer"]},"description":"If specified, only draw entities with this z-layer (mapped by [sortEntitiesZ()]{@link HasEntities#sortEntitiesZ})","name":"z","defaultvalue":null}],"name":"drawEntities","longname":"HasEntitiesMixin#drawEntities","kind":"function","memberof":"HasEntitiesMixin","scope":"instance"},{"comment":"/**\n* Get entities from a particular layer\n* @param {integer} z Entity z-order to get (mapped by [sortEntitiesZ()]{@link HasEntities#sortEntitiesZ})\n*/","meta":{"range":[2229,2340],"filename":"HasEntitiesMixin.js","lineno":72,"columnno":1,"path":"/lib","code":{"id":"astnode100003721","name":"HasEntitiesMixin#getEntitiesAtLayer","type":"MethodDefinition","paramnames":["z"]},"vars":{"":null}},"description":"Get entities from a particular layer","params":[{"type":{"names":["integer"]},"description":"Entity z-order to get (mapped by [sortEntitiesZ()]{@link HasEntities#sortEntitiesZ})","name":"z"}],"name":"getEntitiesAtLayer","longname":"HasEntitiesMixin#getEntitiesAtLayer","kind":"function","memberof":"HasEntitiesMixin","scope":"instance"},{"comment":"/**\n* Recalculate the draw order of all entities based on their Z coordinate and store internally, for use by [drawEntities()]{@link HasEntities#drawEntities}) and [getEntitiesAtLayer()]{@link HasEntities#getEntitiesAtLayer})\n*/","meta":{"range":[2576,2903],"filename":"HasEntitiesMixin.js","lineno":80,"columnno":1,"path":"/lib","code":{"id":"astnode100003744","name":"HasEntitiesMixin#sortEntitiesZ","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Recalculate the draw order of all entities based on their Z coordinate and store internally, for use by [drawEntities()]{@link HasEntities#drawEntities}) and [getEntitiesAtLayer()]{@link HasEntities#getEntitiesAtLayer})","name":"sortEntitiesZ","longname":"HasEntitiesMixin#sortEntitiesZ","kind":"function","memberof":"HasEntitiesMixin","scope":"instance","params":[]},{"comment":"/**\n* Call redraw on all entities in this container by calling [redraw()]{@link Entity#redraw}\n*/","meta":{"range":[3007,3086],"filename":"HasEntitiesMixin.js","lineno":94,"columnno":1,"path":"/lib","code":{"id":"astnode100003821","name":"HasEntitiesMixin#redrawEntities","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Call redraw on all entities in this container by calling [redraw()]{@link Entity#redraw}","name":"redrawEntities","longname":"HasEntitiesMixin#redrawEntities","kind":"function","memberof":"HasEntitiesMixin","scope":"instance","params":[]},{"comment":"","meta":{"range":[6,31],"filename":"HasScenesMixin.js","lineno":1,"columnno":6,"path":"/lib","code":{"id":"astnode100003854","name":"_","type":"CallExpression","value":""}},"undocumented":true,"name":"_","longname":"_","kind":"constant","scope":"global","params":[]},{"comment":"","meta":{"range":[38,64],"filename":"HasScenesMixin.js","lineno":2,"columnno":6,"path":"/lib","code":{"id":"astnode100003860","name":"Mixin","type":"CallExpression","value":""}},"undocumented":true,"name":"Mixin","longname":"Mixin","kind":"constant","scope":"global","params":[]},{"comment":"/**\n* HasScenesMixin is a {@link Mixin} to add a collection of {@link Scene}s to a class\n* @hideconstructor\n*/","meta":{"range":[370,2970],"filename":"HasScenesMixin.js","lineno":14,"columnno":0,"path":"/lib","code":{"id":"astnode100003865","name":"HasScenesMixin","type":"ClassDeclaration","paramnames":[]}},"classdesc":"HasScenesMixin is a {@link Mixin} to add a collection of {@link Scene}s to a class","hideconstructor":true,"name":"HasScenesMixin","longname":"HasScenesMixin","kind":"class","scope":"global"},{"comment":"","meta":{"range":[408,515],"filename":"HasScenesMixin.js","lineno":15,"columnno":1,"path":"/lib","code":{"id":"astnode100003869","name":"HasScenesMixin.init","type":"MethodDefinition","paramnames":["obj","options"]},"vars":{"":null}},"undocumented":true,"name":"init","longname":"HasScenesMixin.init","kind":"function","memberof":"HasScenesMixin","scope":"static","params":[]},{"comment":"/**\n* Add a scene to this container with the given name.\n* @param {String} name The name to assign to the scene\n* @param {Scene} scene The Scene to add\n*/","meta":{"range":[678,868],"filename":"HasScenesMixin.js","lineno":26,"columnno":1,"path":"/lib","code":{"id":"astnode100003895","name":"HasScenesMixin#addScene","type":"MethodDefinition","paramnames":["name","scene"]},"vars":{"":null}},"description":"Add a scene to this container with the given name.","params":[{"type":{"names":["String"]},"description":"The name to assign to the scene","name":"name"},{"type":{"names":["Scene"]},"description":"The Scene to add","name":"scene"}],"name":"addScene","longname":"HasScenesMixin#addScene","kind":"function","memberof":"HasScenesMixin","scope":"instance"},{"comment":"/**\n* Remove a named scene from this container, will trigger a redraw if defined on the container class\n* @param {String} name The name of the scene to remove\n*/","meta":{"range":[1037,1119],"filename":"HasScenesMixin.js","lineno":38,"columnno":1,"path":"/lib","code":{"id":"astnode100003941","name":"HasScenesMixin#removeScene","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"description":"Remove a named scene from this container, will trigger a redraw if defined on the container class","params":[{"type":{"names":["String"]},"description":"The name of the scene to remove","name":"name"}],"name":"removeScene","longname":"HasScenesMixin#removeScene","kind":"function","memberof":"HasScenesMixin","scope":"instance"},{"comment":"/**\n* Return the scene with the given name. Throws an exception if the scene is not found.\n* @param {String} name The name of the scene to return\n* @returns {Scene} The Scene with the given name if found\n* @throws {Exception} 'Scene not found' if the scene is not found\n*/","meta":{"range":[1401,1506],"filename":"HasScenesMixin.js","lineno":49,"columnno":1,"path":"/lib","code":{"id":"astnode100003962","name":"HasScenesMixin#getScene","type":"MethodDefinition","paramnames":["name"]},"vars":{"":null}},"description":"Return the scene with the given name. Throws an exception if the scene is not found.","params":[{"type":{"names":["String"]},"description":"The name of the scene to return","name":"name"}],"returns":[{"type":{"names":["Scene"]},"description":"The Scene with the given name if found"}],"exceptions":[{"type":{"names":["Exception"]},"description":"'Scene not found' if the scene is not found"}],"name":"getScene","longname":"HasScenesMixin#getScene","kind":"function","memberof":"HasScenesMixin","scope":"instance"},{"comment":"/**\n* Draw scenes in z-order\n* @param {CanvasRenderingContext2D} context The context in which to draw\n* @param {integer} z If specified, only draw scenes with this z-layer (mapped by [sortScenesZ()]{@link HasScenes#sortScenesZ})\n*/","meta":{"range":[1747,2006],"filename":"HasScenesMixin.js","lineno":59,"columnno":1,"path":"/lib","code":{"id":"astnode100003984","name":"HasScenesMixin#drawScenes","type":"MethodDefinition","paramnames":["context","z"]},"vars":{"":null}},"description":"Draw scenes in z-order","params":[{"type":{"names":["CanvasRenderingContext2D"]},"description":"The context in which to draw","name":"context"},{"type":{"names":["integer"]},"description":"If specified, only draw scenes with this z-layer (mapped by [sortScenesZ()]{@link HasScenes#sortScenesZ})","name":"z","defaultvalue":null}],"name":"drawScenes","longname":"HasScenesMixin#drawScenes","kind":"function","memberof":"HasScenesMixin","scope":"instance"},{"comment":"/**\n* Get scenes from a particular layer\n* @param {integer} z Scene z-order to get (mapped by [sortScenesZ()]{@link HasScenes#sortScenesZ})\n*/","meta":{"range":[2156,2261],"filename":"HasScenesMixin.js","lineno":72,"columnno":1,"path":"/lib","code":{"id":"astnode100004046","name":"HasScenesMixin#getScenesAtLayer","type":"MethodDefinition","paramnames":["z"]},"vars":{"":null}},"description":"Get scenes from a particular layer","params":[{"type":{"names":["integer"]},"description":"Scene z-order to get (mapped by [sortScenesZ()]{@link HasScenes#sortScenesZ})","name":"z"}],"name":"getScenesAtLayer","longname":"HasScenesMixin#getScenesAtLayer","kind":"function","memberof":"HasScenesMixin","scope":"instance"},{"comment":"/**\n* Recalculate the draw order of all scenes based on their Z coordinate and store internally, for use by [drawScenes()]{@link HasScenes#drawScenes}) and [getScenesAtLayer()]{@link HasScenes#getScenesAtLayer})\n*/","meta":{"range":[2483,2794],"filename":"HasScenesMixin.js","lineno":80,"columnno":1,"path":"/lib","code":{"id":"astnode100004069","name":"HasScenesMixin#sortScenesZ","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Recalculate the draw order of all scenes based on their Z coordinate and store internally, for use by [drawScenes()]{@link HasScenes#drawScenes}) and [getScenesAtLayer()]{@link HasScenes#getScenesAtLayer})","name":"sortScenesZ","longname":"HasScenesMixin#sortScenesZ","kind":"function","memberof":"HasScenesMixin","scope":"instance","params":[]},{"comment":"/**\n* Call redraw on all scenes in this container by calling [redraw()]{@link Scene#redraw}\n*/","meta":{"range":[2895,2968],"filename":"HasScenesMixin.js","lineno":94,"columnno":1,"path":"/lib","code":{"id":"astnode100004146","name":"HasScenesMixin#redrawScenes","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Call redraw on all scenes in this container by calling [redraw()]{@link Scene#redraw}","name":"redrawScenes","longname":"HasScenesMixin#redrawScenes","kind":"function","memberof":"HasScenesMixin","scope":"instance","params":[]},{"comment":"","meta":{"range":[6,47],"filename":"Logger.js","lineno":1,"columnno":6,"path":"/lib","code":{"id":"astnode100004179","name":"vsprintf","type":"MemberExpression","value":".vsprintf"}},"undocumented":true,"name":"vsprintf","longname":"vsprintf","kind":"constant","scope":"global","params":[]},{"comment":"","meta":{"range":[69,1184],"filename":"Logger.js","lineno":5,"columnno":0,"path":"/lib","code":{"id":"astnode100004189","name":"Logger","type":"ClassDeclaration","paramnames":["options"]}},"undocumented":true,"name":"Logger","longname":"Logger","kind":"class","scope":"global"},{"comment":"","meta":{"range":[85,259],"filename":"Logger.js","lineno":6,"columnno":1,"path":"/lib","code":{"id":"astnode100004192","name":"Logger","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"undocumented":true,"name":"Logger","longname":"Logger","kind":"class","scope":"global","params":[]},{"comment":"","meta":{"range":[263,347],"filename":"Logger.js","lineno":11,"columnno":1,"path":"/lib","code":{"id":"astnode100004228","name":"Logger#debug","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"undocumented":true,"name":"debug","longname":"Logger#debug","kind":"function","memberof":"Logger","scope":"instance","params":[]},{"comment":"","meta":{"range":[350,432],"filename":"Logger.js","lineno":16,"columnno":1,"path":"/lib","code":{"id":"astnode100004250","name":"Logger#info","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"undocumented":true,"name":"info","longname":"Logger#info","kind":"function","memberof":"Logger","scope":"instance","params":[]},{"comment":"","meta":{"range":[435,517],"filename":"Logger.js","lineno":21,"columnno":1,"path":"/lib","code":{"id":"astnode100004272","name":"Logger#warn","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"undocumented":true,"name":"warn","longname":"Logger#warn","kind":"function","memberof":"Logger","scope":"instance","params":[]},{"comment":"","meta":{"range":[520,575],"filename":"Logger.js","lineno":26,"columnno":1,"path":"/lib","code":{"id":"astnode100004294","name":"Logger#error","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"undocumented":true,"name":"error","longname":"Logger#error","kind":"function","memberof":"Logger","scope":"instance","params":[]},{"comment":"","meta":{"range":[578,778],"filename":"Logger.js","lineno":30,"columnno":1,"path":"/lib","code":{"id":"astnode100004309","name":"Logger#log","type":"MethodDefinition","paramnames":["type","args"]},"vars":{"":null}},"undocumented":true,"name":"log","longname":"Logger#log","kind":"function","memberof":"Logger","scope":"instance","params":[]},{"comment":"","meta":{"range":[781,953],"filename":"Logger.js","lineno":38,"columnno":1,"path":"/lib","code":{"id":"astnode100004365","name":"Logger.stringToLogLevel","type":"MethodDefinition","paramnames":["str"]},"vars":{"":null}},"undocumented":true,"name":"stringToLogLevel","longname":"Logger.stringToLogLevel","kind":"function","memberof":"Logger","scope":"static","params":[]},{"comment":"","meta":{"range":[956,1090],"filename":"Logger.js","lineno":47,"columnno":1,"path":"/lib","code":{"id":"astnode100004396","name":"Logger.logLevelToString","type":"MethodDefinition","paramnames":["logLevel"]},"vars":{"":null}},"undocumented":true,"name":"logLevelToString","longname":"Logger.logLevelToString","kind":"function","memberof":"Logger","scope":"static","params":[]},{"comment":"","meta":{"range":[1095,1182],"filename":"Logger.js","lineno":56,"columnno":1,"path":"/lib","code":{"id":"astnode100004415","name":"Logger.getDefaultLogger","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"undocumented":true,"name":"getDefaultLogger","longname":"Logger.getDefaultLogger","kind":"function","memberof":"Logger","scope":"static","params":[]},{"comment":"/**\n* Mixin contains functions for creating mixins - a way to do multiple inheritance in JavaScript.\n* Mixin classes can be defined, and their functionality merged into an instance of another class\n* when it is instantiated.\n* @hideconstructor\n* @example\n<caption>To define a Mixin class</caption>\nconst { Mixin } = require('tenkai')\n\nclass YourMixinClass extends Mixin {\nstatic init(obj, options) {\n// Do your initialisation here, like you would in a constructor.\n// obj is the new object, eqivalent of 'this'.\n// The user class can pass options, etc.\nobj.testValue = 'This is a Mixin Class'\n}\n\n// Add methods as per a standard class:\nmixinMethod() {\n...\nconsole.log('mixinMethod: '+this.testValue)\n...\n}\n}\n\n// Use the Mixin.export() function to export the class.\nmodule.exports = Mixin.export(YourMixinClass)\n*\n* @example\n<caption>To use a Mixin class</caption>\nconst YourMixinClass = require('./YourMixinClass')\n\nclass YourMixinUserClass {\nconstructor(options = {}) {\n\n// Call the mixin with this and any options\nYourMixinClass(this, options)\n}\n\nanotherMethod() {\n// Now you can use the properties and methods on the mixin\n\nconsole.log(this.testValue)\nthis.mixinMethod()\n}\n}\n*/","meta":{"range":[1223,1951],"filename":"Mixin.js","lineno":48,"columnno":0,"path":"/lib","code":{"id":"astnode100004458","name":"Mixin","type":"ClassDeclaration","paramnames":[]}},"classdesc":"Mixin contains functions for creating mixins - a way to do multiple inheritance in JavaScript.\nMixin classes can be defined, and their functionality merged into an instance of another class\nwhen it is instantiated.","hideconstructor":true,"examples":["<caption>To define a Mixin class</caption>\nconst { Mixin } = require('tenkai')\n\nclass YourMixinClass extends Mixin {\n\tstatic init(obj, options) {\n\t\t// Do your initialisation here, like you would in a constructor.\n\t\t// obj is the new object, eqivalent of 'this'.\n\t\t// The user class can pass options, etc.\n\t\tobj.testValue = 'This is a Mixin Class' \n\t}\n\n\t// Add methods as per a standard class:\n\tmixinMethod() {\n\t\t...\n\t\tconsole.log('mixinMethod: '+this.testValue)\n\t\t...\n\t}\n}\n\n// Use the Mixin.export() function to export the class.\nmodule.exports = Mixin.export(YourMixinClass)","<caption>To use a Mixin class</caption>\nconst YourMixinClass = require('./YourMixinClass')\n\nclass YourMixinUserClass {\n\tconstructor(options = {}) {\n\n\t\t// Call the mixin with this and any options\n\t\tYourMixinClass(this, options)\n\t}\n\n\tanotherMethod() {\n\t\t// Now you can use the properties and methods on the mixin\n\n\t\tconsole.log(this.testValue)\n\t\tthis.mixinMethod()\n\t}\n}"],"name":"Mixin","longname":"Mixin","kind":"class","scope":"global"},{"comment":"/**\n* Use export to export the class from the module as a mixin.\n* @param {Class} klass The class to export as a mixin\n* @example\n* module.exports = Mixin.export(YourMixinClass)\n*/","meta":{"range":[1425,1627],"filename":"Mixin.js","lineno":55,"columnno":1,"path":"/lib","code":{"id":"astnode100004461","name":"Mixin.export","type":"MethodDefinition","paramnames":["klass"]},"vars":{"":null}},"description":"Use export to export the class from the module as a mixin.","params":[{"type":{"names":["Class"]},"description":"The class to export as a mixin","name":"klass"}],"examples":["module.exports = Mixin.export(YourMixinClass)"],"name":"export","longname":"Mixin.export","kind":"function","memberof":"Mixin","scope":"static"},{"comment":"","meta":{"range":[1630,1949],"filename":"Mixin.js","lineno":65,"columnno":1,"path":"/lib","code":{"id":"astnode100004509","name":"Mixin._getMethods","type":"MethodDefinition","paramnames":["inst"]},"vars":{"":null}},"undocumented":true,"name":"_getMethods","longname":"Mixin._getMethods","kind":"function","memberof":"Mixin","scope":"static","params":[]},{"comment":"","meta":{"range":[6,50],"filename":"Scene.js","lineno":1,"columnno":6,"path":"/lib","code":{"id":"astnode100004580","name":"HasScenesMixin","type":"CallExpression","value":""}},"undocumented":true,"name":"HasScenesMixin","longname":"HasScenesMixin","kind":"constant","scope":"global","params":[]},{"comment":"","meta":{"range":[57,105],"filename":"Scene.js","lineno":2,"columnno":6,"path":"/lib","code":{"id":"astnode100004586","name":"HasEntitiesMixin","type":"CallExpression","value":""}},"undocumented":true,"name":"HasEntitiesMixin","longname":"HasEntitiesMixin","kind":"constant","scope":"global","params":[]},{"comment":"/**\n* Scene is the base class for scenes, which can contain child Scenes, {@link Entity}s, and {@link Props}\n*\n* @mixes HasScenesMixin\n* @mixes HasEntitiesMixin\n* @abstract\n*/","meta":{"range":[289,3124],"filename":"Scene.js","lineno":11,"columnno":0,"path":"/lib","code":{"id":"astnode100004591","name":"Scene","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"Scene is the base class for scenes, which can contain child Scenes, {@link Entity}s, and {@link Props}","mixes":["HasScenesMixin","HasEntitiesMixin"],"virtual":true,"name":"Scene","longname":"Scene","kind":"class","scope":"global","undocumented":true},{"comment":"/**\n* Create a new Scene with the specified options.\n* @param {object} options The options for the GameEngine, composed of the properties.\n* @property {Asset} asset The {@link Asset} to use for the Scene tiles\n* @property {Object} parent The parent of this Scene\n* @property {integer} x The x-coordinate in pixels relative to its parent (optional, default 0)\n* @property {integer} y The y-coordinate in pixels relative to its parent (optional, default 0)\n* @property {integer} z The z-coordinate relative to its parent (optional, default 0)\n* @property {float} scale The current scale (zoom) where 1 = 100% (optional, default 1)\n* @property {boolean} visible Set if this Scene is visible (optional, default true)\n* @property {boolean} enableScroll Enable mouse scrolling (optional, default true)\n*/","meta":{"range":[1116,2513],"filename":"Scene.js","lineno":24,"columnno":1,"path":"/lib","code":{"id":"astnode100004594","name":"Scene","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Create a new Scene with the specified options.","params":[{"type":{"names":["object"]},"description":"The options for the GameEngine, composed of the properties.","name":"options"}],"properties":[{"type":{"names":["Asset"]},"description":"The {@link Asset} to use for the Scene tiles","name":"asset"},{"type":{"names":["Object"]},"description":"The parent of this Scene","name":"parent"},{"type":{"names":["integer"]},"description":"The x-coordinate in pixels relative to its parent (optional, default 0)","name":"x"},{"type":{"names":["integer"]},"description":"The y-coordinate in pixels relative to its parent (optional, default 0)","name":"y"},{"type":{"names":["integer"]},"description":"The z-coordinate relative to its parent (optional, default 0)","name":"z"},{"type":{"names":["float"]},"description":"The current scale (zoom) where 1 = 100% (optional, default 1)","name":"scale"},{"type":{"names":["boolean"]},"description":"Set if this Scene is visible (optional, default true)","name":"visible"},{"type":{"names":["boolean"]},"description":"Enable mouse scrolling (optional, default true)","name":"enableScroll"}],"name":"Scene","longname":"Scene","kind":"class","scope":"global","undocumented":true},{"comment":"/**\n* Create a new Scene with the specified options.\n* @param {object} options The options for the GameEngine, composed of the properties.\n* @property {Asset} asset The {@link Asset} to use for the Scene tiles\n* @property {Object} parent The parent of this Scene\n* @property {integer} x The x-coordinate in pixels relative to its parent (optional, default 0)\n* @property {integer} y The y-coordinate in pixels relative to its parent (optional, default 0)\n* @property {integer} z The z-coordinate relative to its parent (optional, default 0)\n* @property {float} scale The current scale (zoom) where 1 = 100% (optional, default 1)\n* @property {boolean} visible Set if this Scene is visible (optional, default true)\n* @property {boolean} enableScroll Enable mouse scrolling (optional, default true)\n*/","meta":{"range":[1116,2513],"filename":"Scene.js","lineno":24,"columnno":1,"path":"/lib","code":{"id":"astnode100004594","name":"Scene","type":"MethodDefinition","paramnames":["options"]}},"name":"Scene","longname":"Scene","kind":"class","description":"Create a new Scene with the specified options.","scope":"global","classdesc":"Scene is the base class for scenes, which can contain child Scenes, {@link Entity}s, and {@link Props}","mixes":["HasScenesMixin","HasEntitiesMixin"],"virtual":true,"params":[{"type":{"names":["object"]},"description":"The options for the GameEngine, composed of the properties.","name":"options"}],"properties":[{"type":{"names":["Asset"]},"description":"The {@link Asset} to use for the Scene tiles","name":"asset"},{"type":{"names":["Object"]},"description":"The parent of this Scene","name":"parent"},{"type":{"names":["integer"]},"description":"The x-coordinate in pixels relative to its parent (optional, default 0)","name":"x"},{"type":{"names":["integer"]},"description":"The y-coordinate in pixels relative to its parent (optional, default 0)","name":"y"},{"type":{"names":["integer"]},"description":"The z-coordinate relative to its parent (optional, default 0)","name":"z"},{"type":{"names":["float"]},"description":"The current scale (zoom) where 1 = 100% (optional, default 1)","name":"scale"},{"type":{"names":["boolean"]},"description":"Set if this Scene is visible (optional, default true)","name":"visible"},{"type":{"names":["boolean"]},"description":"Enable mouse scrolling (optional, default true)","name":"enableScroll"}]},{"comment":"","meta":{"range":[2516,2577],"filename":"Scene.js","lineno":57,"columnno":1,"path":"/lib","code":{"id":"astnode100004719","name":"Scene#redraw","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"undocumented":true,"name":"redraw","longname":"Scene#redraw","kind":"function","memberof":"Scene","scope":"instance","params":[]},{"comment":"","meta":{"range":[2580,3122],"filename":"Scene.js","lineno":62,"columnno":1,"path":"/lib","code":{"id":"astnode100004734","name":"Scene#draw","type":"MethodDefinition","paramnames":["context"]},"vars":{"":null}},"undocumented":true,"name":"draw","longname":"Scene#draw","kind":"function","memberof":"Scene","scope":"instance","params":[]},{"comment":"","meta":{"range":[6,32],"filename":"TiledScene.js","lineno":1,"columnno":6,"path":"/lib","code":{"id":"astnode100004805","name":"Scene","type":"CallExpression","value":""}},"undocumented":true,"name":"Scene","longname":"Scene","kind":"constant","scope":"global","params":[]},{"comment":"/**\n* TiledScene is the base class for tiled backgrounds.\n*\n* @extends Scene\n* @example\n<caption>Create a new TiledScene with 16x16 tiles from an {@link Asset}</caption>\nvar mainMapTilesAsset = new Asset({ name: 'mainMapTilesAsset', src: 'assets/mainmap_tileset.png' })\nvar scene = new TiledScene({ asset: mainMapTilesAsset, tileWidth: 16, tileHeight: 16, x: 0, y: 0 })\n*/","meta":{"range":[413,3395],"filename":"TiledScene.js","lineno":12,"columnno":0,"path":"/lib","code":{"id":"astnode100004810","name":"TiledScene","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"TiledScene is the base class for tiled backgrounds.","augments":["Scene"],"examples":["<caption>Create a new TiledScene with 16x16 tiles from an {@link Asset}</caption>\nvar mainMapTilesAsset = new Asset({ name: 'mainMapTilesAsset', src: 'assets/mainmap_tileset.png' })\nvar scene = new TiledScene({ asset: mainMapTilesAsset, tileWidth: 16, tileHeight: 16, x: 0, y: 0 })"],"name":"TiledScene","longname":"TiledScene","kind":"class","scope":"global","undocumented":true},{"comment":"/**\n* Create a new TiledScene with the specified options.\n* @param {object} options The options for the TiledScene, composed of the properties.\n* @property {integer} tileWidth The width of each tile in the asset\n* @property {integer} tileHeight The height of each tile in the asset\n* @property {integer} perspectiveMode The perspective mode of this TiledScene\n*/","meta":{"range":[817,1153],"filename":"TiledScene.js","lineno":20,"columnno":1,"path":"/lib","code":{"id":"astnode100004814","name":"TiledScene","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Create a new TiledScene with the specified options.","params":[{"type":{"names":["object"]},"description":"The options for the TiledScene, composed of the properties.","name":"options"}],"properties":[{"type":{"names":["integer"]},"description":"The width of each tile in the asset","name":"tileWidth"},{"type":{"names":["integer"]},"description":"The height of each tile in the asset","name":"tileHeight"},{"type":{"names":["integer"]},"description":"The perspective mode of this TiledScene","name":"perspectiveMode"}],"name":"TiledScene","longname":"TiledScene","kind":"class","scope":"global","undocumented":true},{"comment":"/**\n* Create a new TiledScene with the specified options.\n* @param {object} options The options for the TiledScene, composed of the properties.\n* @property {integer} tileWidth The width of each tile in the asset\n* @property {integer} tileHeight The height of each tile in the asset\n* @property {integer} perspectiveMode The perspective mode of this TiledScene\n*/","meta":{"range":[817,1153],"filename":"TiledScene.js","lineno":20,"columnno":1,"path":"/lib","code":{"id":"astnode100004814","name":"TiledScene","type":"MethodDefinition","paramnames":["options"]}},"name":"TiledScene","longname":"TiledScene","kind":"class","description":"Create a new TiledScene with the specified options.","scope":"global","classdesc":"TiledScene is the base class for tiled backgrounds.","augments":["Scene"],"examples":["<caption>Create a new TiledScene with 16x16 tiles from an {@link Asset}</caption>\nvar mainMapTilesAsset = new Asset({ name: 'mainMapTilesAsset', src: 'assets/mainmap_tileset.png' })\nvar scene = new TiledScene({ asset: mainMapTilesAsset, tileWidth: 16, tileHeight: 16, x: 0, y: 0 })"],"params":[{"type":{"names":["object"]},"description":"The options for the TiledScene, composed of the properties.","name":"options"}],"properties":[{"type":{"names":["integer"]},"description":"The width of each tile in the asset","name":"tileWidth"},{"type":{"names":["integer"]},"description":"The height of each tile in the asset","name":"tileHeight"},{"type":{"names":["integer"]},"description":"The perspective mode of this TiledScene","name":"perspectiveMode"}]},{"comment":"","meta":{"range":[1156,2170],"filename":"TiledScene.js","lineno":33,"columnno":1,"path":"/lib","code":{"id":"astnode100004862","name":"TiledScene#draw","type":"MethodDefinition","paramnames":["context"]},"vars":{"":null}},"undocumented":true,"name":"draw","longname":"TiledScene#draw","kind":"function","memberof":"TiledScene","scope":"instance","params":[]},{"comment":"","meta":{"range":[2173,3393],"filename":"TiledScene.js","lineno":67,"columnno":1,"path":"/lib","code":{"id":"astnode100004996","name":"TiledScene#_drawLayer","type":"MethodDefinition","paramnames":["context","z"]},"vars":{"":null}},"undocumented":true,"name":"_drawLayer","longname":"TiledScene#_drawLayer","kind":"function","memberof":"TiledScene","scope":"instance","params":[]}]}